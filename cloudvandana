
//Java

//1. Creating an array with the values (1, 2, 3, 4, 5, 6, 7) and shuffling it.

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ShuffleArray {
    public static void main(String[] args) {
        int[] originalArray = {1, 2, 3, 4, 5, 6, 7};

        // Convert the array to a list
        List<Integer> list = new ArrayList<>();
        for (int value : originalArray) {
            list.add(value);
        }

        // Shuffle the list
        Collections.shuffle(list);

        // Convert the list back to an array
        Integer[] shuffledArray = list.toArray(new Integer[0]);

        // Print the shuffled array
        for (int value : shuffledArray) {
            System.out.print(value + " ");
        }
    }
}

//2. Taking a Roman Number as input from user and converting it to an integer. (Example: IX = 9)

import java.util.Scanner;

public class RomanToInteger {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter a Roman numeral: ");
        String romanNumeral = scanner.nextLine().toUpperCase();
        
        int result = romanToInteger(romanNumeral);
        
        if (result != -1) {
            System.out.println("The Roman numeral " + romanNumeral + " is equivalent to the integer " + result);
        } else {
            System.out.println("Invalid Roman numeral.");
        }
    }

    public static int romanToInteger(String s) {
        int result = 0;
        
        for (int i = 0; i < s.length(); i++) {
            int currentVal = romanCharToInt(s.charAt(i));
            
            if (i + 1 < s.length()) {
                int nextVal = romanCharToInt(s.charAt(i + 1));
                
                if (currentVal < nextVal) {
                    result -= currentVal;
                } else {
                    result += currentVal;
                }
            } else {
                result += currentVal;
            }
        }
        
        return result;
    }

    public static int romanCharToInt(char c) {
        switch (c) {
            case 'I':
                return 1;
            case 'V':
                return 5;
            case 'X':
                return 10;
            case 'L':
                return 50;
            case 'C':
                return 100;
            case 'D':
                return 500;
            case 'M':
                return 1000;
            default:
                return -1; // Invalid character
        }
    }
}


//3.Checking if the input (taking the input from user) is pangram or not. (A pangram is a sentence that contains all the alphabets from A to Z)
import java.util.Scanner;

public class PangramChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter a sentence or phrase: ");
        String input = scanner.nextLine().toLowerCase(); // Convert the input to lowercase for case-insensitive checking

        boolean isPangram = checkIfPangram(input);

        if (isPangram) {
            System.out.println("The input is a pangram.");
        } else {
            System.out.println("The input is not a pangram.");
        }
    }

    public static boolean checkIfPangram(String input) {
        boolean[] alphabetPresent = new boolean[26];

        for (int i = 0; i < input.length(); i++) {
            char c = input.charAt(i);
            if (Character.isLetter(c)) {
                int index = c - 'a';
                alphabetPresent[index] = true;
            }
        }

        for (boolean letterPresent : alphabetPresent) {
            if (!letterPresent) {
                return false;
            }
        }

        return true;
    }
}


//Javascript

//1.Taking a sentence as an input from the user and reverse every word in that sentence.


// Function to reverse a word
function reverseWord(word) {
    return word.split('').reverse().join('');
}

// Function to reverse every word in the sentence
function reverseWordsInSentence(sentence) {
    const words = sentence.split(' ');
    const reversedWords = words.map(word => reverseWord(word));
    return reversedWords.join(' ');
}

// Get user input
const inputSentence = prompt("Enter a sentence:");

// Check if the input is not empty
if (inputSentence !== null) {
    const reversedSentence = reverseWordsInSentence(inputSentence);
    console.log("Reversed Sentence: " + reversedSentence);
} else {
    console.log("No input provided.");
}

//2.Perform sorting of an array in descending order by taking the array from the user


// Get user input as a comma-separated string and split it into an array
const inputString = prompt("Enter an array of numbers (comma-separated):");
if (inputString === null) {
    console.log("No input provided.");
} else {
    const inputArray = inputString.split(',').map(Number);

    // Check if the input is a valid array
    if (Array.isArray(inputArray) && inputArray.every(Number.isFinite)) {
        // Sort the array in descending order
        inputArray.sort((a, b) => b - a);

        // Display the sorted array
        console.log("Sorted Array in Descending Order: " + inputArray.join(', '));
    } else {
        console.log("Invalid input. Please enter a valid array of numbers.");
    }
}






